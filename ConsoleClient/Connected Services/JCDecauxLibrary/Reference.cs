//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleClient.JCDecauxLibrary {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Town", Namespace="http://schemas.datacontract.org/2004/07/JCDecauxLibrary")]
    [System.SerializableAttribute()]
    public partial class Town : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/JCDecauxLibrary")]
    [System.SerializableAttribute()]
    public partial class Station : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Available_bike_standsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Available_bikesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Available_bike_stands {
            get {
                return this.Available_bike_standsField;
            }
            set {
                if ((this.Available_bike_standsField.Equals(value) != true)) {
                    this.Available_bike_standsField = value;
                    this.RaisePropertyChanged("Available_bike_stands");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Available_bikes {
            get {
                return this.Available_bikesField;
            }
            set {
                if ((this.Available_bikesField.Equals(value) != true)) {
                    this.Available_bikesField = value;
                    this.RaisePropertyChanged("Available_bikes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JCDecauxLibrary.IJCDecauxOperations")]
    public interface IJCDecauxOperations {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxOperations/GetTowns", ReplyAction="http://tempuri.org/IJCDecauxOperations/GetTownsResponse")]
        ConsoleClient.JCDecauxLibrary.Town[] GetTowns();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxOperations/GetTowns", ReplyAction="http://tempuri.org/IJCDecauxOperations/GetTownsResponse")]
        System.Threading.Tasks.Task<ConsoleClient.JCDecauxLibrary.Town[]> GetTownsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxOperations/GetStationsFromTown", ReplyAction="http://tempuri.org/IJCDecauxOperations/GetStationsFromTownResponse")]
        ConsoleClient.JCDecauxLibrary.Station[] GetStationsFromTown(string town);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxOperations/GetStationsFromTown", ReplyAction="http://tempuri.org/IJCDecauxOperations/GetStationsFromTownResponse")]
        System.Threading.Tasks.Task<ConsoleClient.JCDecauxLibrary.Station[]> GetStationsFromTownAsync(string town);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxOperations/GetAvailableVelib", ReplyAction="http://tempuri.org/IJCDecauxOperations/GetAvailableVelibResponse")]
        ConsoleClient.JCDecauxLibrary.Station GetAvailableVelib(string station, string town);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJCDecauxOperations/GetAvailableVelib", ReplyAction="http://tempuri.org/IJCDecauxOperations/GetAvailableVelibResponse")]
        System.Threading.Tasks.Task<ConsoleClient.JCDecauxLibrary.Station> GetAvailableVelibAsync(string station, string town);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJCDecauxOperationsChannel : ConsoleClient.JCDecauxLibrary.IJCDecauxOperations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JCDecauxOperationsClient : System.ServiceModel.ClientBase<ConsoleClient.JCDecauxLibrary.IJCDecauxOperations>, ConsoleClient.JCDecauxLibrary.IJCDecauxOperations {
        
        public JCDecauxOperationsClient() {
        }
        
        public JCDecauxOperationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JCDecauxOperationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JCDecauxOperationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JCDecauxOperationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleClient.JCDecauxLibrary.Town[] GetTowns() {
            return base.Channel.GetTowns();
        }
        
        public System.Threading.Tasks.Task<ConsoleClient.JCDecauxLibrary.Town[]> GetTownsAsync() {
            return base.Channel.GetTownsAsync();
        }
        
        public ConsoleClient.JCDecauxLibrary.Station[] GetStationsFromTown(string town) {
            return base.Channel.GetStationsFromTown(town);
        }
        
        public System.Threading.Tasks.Task<ConsoleClient.JCDecauxLibrary.Station[]> GetStationsFromTownAsync(string town) {
            return base.Channel.GetStationsFromTownAsync(town);
        }
        
        public ConsoleClient.JCDecauxLibrary.Station GetAvailableVelib(string station, string town) {
            return base.Channel.GetAvailableVelib(station, town);
        }
        
        public System.Threading.Tasks.Task<ConsoleClient.JCDecauxLibrary.Station> GetAvailableVelibAsync(string station, string town) {
            return base.Channel.GetAvailableVelibAsync(station, town);
        }
    }
}
